// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sports.Model;

#nullable disable

namespace Sports.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250612091410_addTable")]
    partial class addTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Sports.Model.Academy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademyCity")
                        .HasColumnType("longtext");

                    b.Property<string>("AcademyCountry")
                        .HasColumnType("longtext");

                    b.Property<string>("AcademyEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("AcademyName")
                        .HasColumnType("longtext");

                    b.Property<string>("AcademyPassword")
                        .HasColumnType("longtext");

                    b.Property<string>("AcademyPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("LogoURL")
                        .HasColumnType("longtext");

                    b.Property<string>("Statue")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Academies");
                });

            modelBuilder.Entity("Sports.Model.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademyId")
                        .HasColumnType("int");

                    b.Property<string>("AwayTeam")
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HomeTeam")
                        .HasColumnType("longtext");

                    b.Property<string>("MatchStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Stadium")
                        .HasColumnType("longtext");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("AcademyId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Sports.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademyId")
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AcademyId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Sports.Model.Match", b =>
                {
                    b.HasOne("Sports.Model.Academy", "Academy")
                        .WithMany()
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academy");
                });

            modelBuilder.Entity("Sports.Model.Role", b =>
                {
                    b.HasOne("Sports.Model.Academy", "Academy")
                        .WithMany()
                        .HasForeignKey("AcademyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academy");
                });
#pragma warning restore 612, 618
        }
    }
}
